{"version":3,"sources":["components/HeaderFilter.js","components/Header.js","services/api.js","components/Jobs.js","components/JobsSearch.js","components/Footer.js","App.js","index.js"],"names":["HeaderFilter","history","useHistory","result","JSON","parse","localStorage","getItem","searchItems","useEffect","console","log","className","map","item","onClick","i","length","splice","setItem","stringify","window","location","reload","push","deleteStorageItem","clear","Header","api","axios","create","baseURL","Jobs","useState","jobs","setJobs","get","then","response","data","dataStorage","job","key","id","style","featured","borderLeft","src","workimage","alt","workname","new","jobdescription","posted","worktime","workplace","to","jobrole","value","languages","language","JobsSearch","searchResult","setSearchResult","search","searchArray","items","miniSearch","MiniSearch","fields","storeFields","extractField","document","fieldName","split","reduce","doc","Array","isArray","join","addAll","results","from","Footer","class","href","target","App","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef090125.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nfunction HeaderFilter() {\n\n    let history = useHistory();\n\n    let result = JSON.parse(localStorage.getItem('allData'));\n\n    let searchItems = [...result];\n\n    useEffect(() => {\n        result = JSON.parse(localStorage.getItem('allData'));\n    })\n\n\n    const deleteStorageItem = (item) => {\n        for( var i = 0; i < searchItems.length; i++){ \n            if ( searchItems[i] === item) { \n                searchItems.splice(i, 1);\n                localStorage.setItem('allData', JSON.stringify(searchItems));\n            }\n        }\n        \n        if (searchItems.length > 0) {\n            window.location.reload(false);\n        } else {\n            history.push(\"/\");\n        }\n        \n    }\n\n    const clearSearch = () => {\n        localStorage.clear();\n        history.push(\"/\");\n    }\n\n    console.log(searchItems);\n\n    return (\n        <section className=\"hero\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <div className=\"box\">\n                        <div className=\"columns is-mobile\">\n                            <div className=\"column field is-grouped is-grouped-multiline\">\n                            {\n                                searchItems.map(item => (\n                                    <div className=\"control\">\n                                        <div className=\"tags has-addons\">\n                                            <span className=\"tag is-success is-light is-medium\">{item}</span>\n                                            <a onClick={() => deleteStorageItem(item)} className=\"tag is-delete is-primary is-medium\"></a>\n                                        </div>\n                                    </div>\n                                ))\n                            }\n\n                                \n                            </div>\n                            <div className=\"column is-one-fifth\">\n                                <p onClick={() => clearSearch()} className=\"clearSearch is-pulled-right\">Clear</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default HeaderFilter;","import React, { useEffect } from 'react';\n\nimport HeaderFilter from './HeaderFilter';\n\nfunction Header() {\n\n    return (\n        <section className=\"hero\">\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    \n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Header;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: './'\n});\n\nexport default api;","import React, {useState, useEffect, Fragment} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport api from '../services/api';\n\nfunction Jobs() {\n\n    const [jobs, setJobs] = useState([]);\n\n    useEffect(() => {\n        api.get('data.json')\n            .then(response => {\n                setJobs(response.data);\n            })\n    }, []);\n\n    let searchItems = [];\n\n    const dataStorage = (data) => {        \n\n        searchItems.push(data);\n        localStorage.setItem('allData', JSON.stringify(searchItems));\n    }\n\n    return (\n        <Fragment>\n        { \n            jobs.map(job => (\n                <div key={job.id} className=\"box\" style={job.featured ? {borderLeft: '6px #5DA5A4 solid'} : {borderLeft: '6px #FFF solid'}}>\n                    <article className=\"media\">\n                        <div className=\"media-left\">\n                            <figure className=\"is-hidden-mobile image is-96x96\">\n                                <img className=\"is-rounded\" src={job.workimage} alt={'imagem de ' + job.workname} />\n                            </figure>\n                            <figure className=\"is-hidden-tablet image is-48x48\">\n                                <img className=\"is-rounded\" src={job.workimage} alt={'imagem de ' + job.workname} />\n                            </figure>\n                        </div>\n                        <div className=\"media-content\">\n                            <div className=\"content\">\n                                <p>\n                                <strong className=\"workName\">{job.workname}</strong> \n                                {\n                                    job.new ?\n                                    (<span className=\"tag is-primary is-rounded\">NEW!</span>)\n                                    :\n                                    ('')\n                                }\n                                {\n                                    job.featured ?\n                                    (<span className=\"tag is-dark is-rounded\">FEATURED</span>)\n                                    :\n                                    ('')\n                                }\n                                <br />\n                                <strong className=\"jobName\">{job.jobdescription}</strong>\n                                <br />\n                                {job.posted} <i className=\"fas fa-circle\"></i> {job.worktime} <i className=\"fas fa-circle\"></i> {job.workplace}\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"is-hidden-mobile media-right\">\n                            <Link to=\"/search\"><span onClick={() => dataStorage(job.jobrole)} value={job.jobrole} className=\"tag is-success is-light is-medium\">{job.jobrole}</span></Link>\n                            {\n                                job.languages.map(language => (\n                                    <Link to=\"/search\"><span onClick={() => dataStorage(language)} value={language} className=\"tag is-success is-light is-medium\">{language}</span></Link>\n                                ))\n                            }\n                        </div>\n                    </article>\n                    <hr className=\"is-hidden-tablet hrLine\" />\n                    <div className=\"is-hidden-tablet languagesMobile\">\n                        <Link to=\"/search\"><span onClick={() => dataStorage(job.jobrole)} value={job.jobrole} className=\"tag is-success is-light is-medium\">{job.jobrole}</span></Link>\n                        {\n                            job.languages.map(language => (\n                                <Link to=\"/search\"><span onClick={() => dataStorage(language)} value={language} className=\"tag is-success is-light is-medium\">{language}</span></Link>\n                            ))\n                        }\n                    </div>\n                </div>\n            ))\n        }\n        </Fragment>\n    );\n}\n\nexport default Jobs;","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport api from '../services/api';\n\nimport MiniSearch from 'minisearch';\n\nfunction JobsSearch() {\n\n    const [jobs, setJobs] = useState([]);\n    const [searchResult, setSearchResult] = useState([]);\n\n    useEffect(() => {\n        api.get('data.json')\n            .then(response => {\n                setJobs(response.data);\n            })\n    }, []);\n\n    useEffect(() => {\n        search(searchArray);\n    }, [jobs]);\n\n    let result = JSON.parse(localStorage.getItem('allData'));\n    let searchItems = [...result];\n    let searchArray;\n    searchItems.map(item => {\n        return searchArray = (item + ' ');\n    })\n    \n    const dataStorage = (data) => {        \n\n        searchItems.push(data);\n        localStorage.setItem('allData', JSON.stringify(searchItems));\n\n        // const result = JSON.parse(localStorage.getItem('allData'));\n\n        searchItems.map(item => {\n            return search(item + ' ');\n        })\n    }\n\n    const search = (items) => {\n        let miniSearch = new MiniSearch({\n            fields: ['jobrole', 'languages'],\n            storeFields: ['id', 'new', 'featured', 'posted', 'workname', 'workimage', 'jobdescription', 'jobrole', 'joblevel', 'worktime', 'workplace', 'languages'],\n            extractField: (document, fieldName) => {\n                const value = fieldName.split('.').reduce((doc, key) => doc && doc[key], document)\n                return Array.isArray(value) ? value.join(' ') : value\n            }\n        });\n    \n        miniSearch.addAll(jobs);\n    \n        let results = miniSearch.search(items);\n        \n        setSearchResult(results);\n    \n    }\n\n    return (\n        <Fragment>\n        { \n            searchResult.map(job => (\n                <div key={job.id} className=\"box\" style={job.featured ? {borderLeft: '6px #5DA5A4 solid'} : {borderLeft: '6px #FFF solid'}}>\n                    <article className=\"media\">\n                        <div className=\"media-left\">\n                            <figure className=\"is-hidden-mobile image is-96x96\">\n                                <img className=\"is-rounded\" src={job.workimage} alt={'imagem de ' + job.workname} />\n                            </figure>\n                            <figure className=\"is-hidden-tablet image is-48x48\">\n                                <img className=\"is-rounded\" src={job.workimage} alt={'imagem de ' + job.workname} />\n                            </figure>\n                        </div>\n                        <div className=\"media-content\">\n                            <div className=\"content\">\n                                <p>\n                                <strong className=\"workName\">{job.workname}</strong> \n                                {\n                                    job.new ?\n                                    (<span className=\"tag is-primary is-rounded\">NEW!</span>)\n                                    :\n                                    ('')\n                                }\n                                {\n                                    job.featured ?\n                                    (<span className=\"tag is-dark is-rounded\">FEATURED</span>)\n                                    :\n                                    ('')\n                                }\n                                <br />\n                                <strong className=\"jobName\">{job.jobdescription}</strong>\n                                <br />\n                                {job.posted} <i className=\"fas fa-circle\"></i> {job.worktime} <i className=\"fas fa-circle\"></i> {job.workplace}\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"is-hidden-mobile media-right\">\n                            <Link to=\"/search\"><span onClick={() => dataStorage(job.jobrole)} value={job.jobrole} className=\"tag is-success is-light is-medium\">{job.jobrole}</span></Link>\n                            {\n                                Array.from(job.languages.split(\" \")).map(language => (\n                                    <Link to=\"/search\"><span onClick={() => dataStorage(language)} value={language} className=\"tag is-success is-light is-medium\">{language}</span></Link>\n                                ))\n                            }\n                        </div>\n                    </article>\n                    <hr className=\"is-hidden-tablet hrLine\" />\n                    <div className=\"is-hidden-tablet languagesMobile\">\n                        <Link to=\"/search\"><span onClick={() => dataStorage(job.jobrole)} value={job.jobrole} className=\"tag is-success is-light is-medium\">{job.jobrole}</span></Link>\n                        {\n                            Array.from(job.languages.split(\" \")).map(language => (\n                                <Link to=\"/search\"><span onClick={() => dataStorage(language)} value={language} className=\"tag is-success is-light is-medium\">{language}</span></Link>\n                            ))\n                        }\n                    </div>\n                </div>\n            ))\n        }\n        </Fragment>\n    );\n}\n\nexport default JobsSearch;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer class=\"footer\">\n            <div class=\"content has-text-centered\">\n                <p>\n                    Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\">Frontend Mentor</a>. \n                    Coded by <a href=\"https://sueldosales.github.io/\"><strong>Sueldo Sales</strong></a>.\n                </p>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport HeaderFilter from './components/HeaderFilter';\nimport Jobs from './components/Jobs';\nimport JobsSearch from './components/JobsSearch';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <div className=\"App\">\n          <Route path=\"/\" exact component={Header} />\n          <Route path=\"/search\" component={HeaderFilter} />\n\n          <section id=\"jobs\" className=\"section\">\n            <div className=\"container\">\n              \n                  <Route path=\"/\" exact component={Jobs} />\n                  <Route path=\"/search\" component={JobsSearch} />\n                \n            </div>\n          </section>\n\n          <Footer />\n        </div>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}